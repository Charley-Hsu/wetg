<style lang="less">
  @import './style/weui.less';
  page{
    background-color: #F8F8F8;
    font-size: 16px;
    font-family: -apple-system-font,Helvetica Neue,Helvetica,sans-serif;
  }
  .page__hd {
    padding: 40px;
  }
  .page__bd {
    padding-bottom: 40px;
  }
  .page__bd_spacing {
    padding-left: 15px;
    padding-right: 15px;
  }

  .page__ft{
    padding-bottom: 10px;
    text-align: center;
  }

  .page__title {
    text-align: left;
    font-size: 20px;
    font-weight: 400;
  }

  .page__desc {
    margin-top: 5px;
    color: #888888;
    text-align: left;
    font-size: 14px;
  }
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'

  export default class extends wepy.app {
    config = {
      'pages': [
      'pages/demo',
      'pages/index',
      'example/index',
      'example/button',
      'example/list',
      'example/input',
      'example/slider',
      'example/uploader',
      'example/article',
      'example/badge',
      'example/flex',
      'example/footer',
      'example/gallery',
      'example/grid',
      'example/icons',
      'example/loadmore',
      'example/panel',
      'example/preview',
      'example/progress',
      'example/actionsheet',
      'example/dialog',
      'example/msg',
      'example/msg_fail',
      'example/msg_success',
      'example/picker',
      'example/toast',
      'example/navbar',
      'example/tabbar',
      'example/searchbar'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#fff',
        navigationBarTitleText: 'WeChat',
        navigationBarTextStyle: 'black'
      }
    };
    globalData = {
      userInfo: null
    };
    constructor () {
      super();
    // this.use('promisify');
    this.use('requestfix');
  };
  onLaunch() {
    // this.testAsync()
  };
  // sleep (s) {
  //   return new Promise((resolve, reject) => {
  //     setTimeout(() => {
  //       resolve('promise resolved')
  //     }, s * 1000)
  //   })
  // };
  // async testAsync () {
  //   const data = await this.sleep(3)
  //   console.log(data)
  // };
  tgPost(url,data,cookie){
    return new Promise((resolve, reject) => {
      wx.request({
        url: url,
        method:POST,
        data: data || {},
        header: { 
          'content-type': 'application/x-www-form-urlencoded', 
          'Cookie': cookie || ''
        },
        success:(d)=>{
          resolve(d)
        },
        fail:(error)=>{
          reject(error)
        }
      });
    });
  };
  tgGet(url,data,cookie){
    return new Promise((resolve, reject) => {
      wx.request({
        url: url,
        method:GET,
        data: data || {},
        header: { 
          'content-type': 'application/json', 
          'Cookie': cookie || ''
        },
        success:(d)=>{
          resolve(d)
        },
        fail:(error)=>{
          reject(error)
        }
      });
    });
  };
  /**
   * param 将要转为URL参数字符串的对象
   * key URL参数字符串的前缀
   * encode true/false 是否进行URL编码,默认为true
   * 
   * return URL参数字符串
   */
  urlEncode(param, key, encode) {
    if(param==null) return '';
    var paramStr = '';
    var t = typeof (param);
    if (t == 'string' || t == 'number' || t == 'boolean') {
      paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);
    } else {
      for (var i in param) {
        var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);
        paramStr += urlEncode(param[i], k, encode);
      }
    }
    return paramStr;
  };
  getUserInfo(cb) {
    const that = this;
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo;
        cb && cb(res.userInfo);
      }
    })
  }
}
</script>
